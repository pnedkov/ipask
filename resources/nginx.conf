events {}

http {
    server {
        listen 80;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;

        location / {
            limit_except GET { deny  all; }

            proxy_pass http://ipget:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_header Server;
        }

    }

    # DOS
    client_body_buffer_size                 1K;
    client_header_buffer_size               1k;
    client_max_body_size                    1k;
    large_client_header_buffers             2 1k;

    # Security headers
    add_header X-Frame-Options              "DENY";
    add_header X-XSS-Protection             "1; mode=block" always;
    add_header X-Content-Type-Options       "nosniff" always;
    add_header Referrer-Policy              "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy      "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy           "interest-cohort=()" always;
    add_header Strict-Transport-Security    "max-age=31536000; includeSubDomains" always;
}
